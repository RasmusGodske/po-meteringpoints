name: Update base Env

on:
  # TODO: FOR TESTING - DELETE LATER
  push:
    branches:
      - main
  # repository_dispatch:
  #   types: [update_base_env]
  # workflow_run:
  #   workflows: ["Create Release"]
  #   types:
  #     - completed

env:
  BASE_ENV_REPO: "RasmusGodske/po-base-environment"
  BASE_ENV_REPO_BRANCH: "main"

  NEW_BRANCH_PREFIK: "auto_update/po-meteringpoint-updated--"
  DOCKER_IMAGE_VERSION_TAG: "V0.1.20"
  

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          repository: ${{ env.BASE_ENV_REPO }}
          ref: ${{ env.BASE_ENV_REPO_BRANCH }}
      
      - uses: actions/setup-python@v2

      - name: install yaml
        run: python -m pip install pyyaml

      - name: Update tags
        uses: jannekem/run-python-script-action@v1
        with:
          script: |
            import yaml

            file = "yggdrasil/applications/ett/ett-meteringpoints.yaml"
            with open(file) as f:
                doc = yaml.safe_load(f)
                print(doc)

                doc['ett-base-helm-chart']['deployments'][0]['image']['tag'] = "${{ env.DOCKER_IMAGE_VERSION_TAG }}"
                doc['ett-base-helm-chart']['deployments'][1]['image']['tag'] = "${{ env.DOCKER_IMAGE_VERSION_TAG }}"

                with open(file, 'w') as f:
                    yaml.safe_dump(doc, f)
      
      - run: |
          date > generated.txt
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout -b "${{ env.NEW_BRANCH_PREFIK }}${{ env.DOCKER_IMAGE_VERSION_TAG }}"
          git add .
          git commit -m "generated"
          git push origin ${{ env.NEW_BRANCH_PREFIK }}${{ env.DOCKER_IMAGE_VERSION_TAG }}

      # - name: Get Event payload
      #   id: define_version
      #   run: |
      #     echo "${{ github.event.client_payload.docker_image_tag }}"

      # - name: Checkout code
      #   uses: actions/checkout@v2
      #   with:
      #     token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}