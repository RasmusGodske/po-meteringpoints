name: Create Release V2

env:
  # Url of the current job
  JOB_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  ## Build and push job
  DOCKER_IMAGE: godske/test

  ## Update Base Environment job
  BASE_ENV_REPO: "RasmusGodske/po-base-environment"
  BASE_ENV_REPO_BRANCH: "main"

  # The name of the service being updated and shown in pull request
  SERVICE_NAME: meteringpoints

on:
  # push:
  #   branches:
  #     - main
  workflow_run:
    workflows: ["Lint and Test"]
    branches: [main]
    types:
      - completed

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.define_version.outputs.VERSION_NUMBER }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
 
      - name: Define version
        id: define_version
        run: |
          export MAJOR=0
          export MINOR=0
          export PATCH=${{ github.run_number }}
          export VERSION_NUMBER="v${MAJOR}.${MINOR}.${PATCH}"
          echo $VERSION_NUMBER
          echo "::set-output name=VERSION_NUMBER::$VERSION_NUMBER"

      - uses: "marvinpinto/action-automatic-releases@919008cf3f741b179569b7a6fb4d8860689ab7f0"
        with:
          repo_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          automatic_release_tag: ${{steps.define_version.outputs.VERSION_NUMBER}}
          prerelease: false
          draft: false
          title: Release ${{ steps.define_version.outputs.VERSION_NUMBER }}
  
  push_to_registry:
    name: Push Docker image to Docker Hub
    needs: create_release
    runs-on: ubuntu-latest
    outputs:
      docker_image_digest: ${{ steps.push.outputs.digest }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            type=semver,pattern=v{{version}},value=${{ needs.create_release.outputs.release_tag }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  update_base_env:
    name: Update Base Environment
    runs-on: ubuntu-latest
    needs: 
      - create_release
      - push_to_registry
    steps:

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          repository: ${{ env.BASE_ENV_REPO }}
          ref: ${{ env.BASE_ENV_REPO_BRANCH }}

      - uses: actions/setup-python@v2

      - name: install yaml
        run: python -m pip install pyyaml
 
      - name: Update Helm Chart Tags
        uses: jannekem/run-python-script-action@v1
        with:
          script: |
            import yaml

            file = "yggdrasil/applications/ett/ett-meteringpoints.yaml"
            with open(file) as f:
                doc = yaml.safe_load(f)
                print(doc)

                doc['ett-base-helm-chart']['deployments'][0]['image']['tag'] = "${{ needs.create_release.outputs.release_tag }}"
                doc['ett-base-helm-chart']['deployments'][1]['image']['tag'] = "${{ needs.create_release.outputs.release_tag }}"

                with open(file, 'w') as f:
                    yaml.safe_dump(doc, f)

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          title: Bump ${{ env.SERVICE_NAME }} to ${{ needs.create_release.outputs.release_tag }}
          commit-message: Bump ${{ env.SERVICE_NAME }} to ${{ needs.create_release.outputs.release_tag }}
          committer: GitHub <noreply@github.com>
          branch: "automated/github_actions/bump-${{ env.SERVICE_NAME }}-version-${{ needs.create_release.outputs.release_tag }}"
          body: |
            Bump ${{ env.SERVICE_NAME }} to ${{ needs.create_release.outputs.release_tag }}
 
            - Triggered by [Job][1] in [Repo][2]

            [1]: ${{ env.JOB_URL }} 
            [2]: ${{ github.server_url }}/${{ github.repository }}